@use "sass:map";
@use './variables' as *;
@use './effects' as *;

$width-height: (
    screen: 100vh,
    fit: fit-content,
    full: 100%,
    'max': max-content,
    'min': min-content,
    'auto': auto,
);

$position-values: (
    "0": 0,
    '2':2%,
    "5": 5%,
    "10": 10%,
    "20": 20%,
    "25": 25%,
    "30": 30%,
    "40": 40%,
    "50": 50%,
    "60": 60%,
    "70": 70%,
    "75": 75%,
    "80": 80%,
    "90": 90%,
    "100": 100%,
    "auto": auto,
    'sm':280px,
    'md': 480px,
    'lg': 720px,
    'xl': 960px,
    '2xl': 1140px,
    '3xl': 1320px,
);

$combined-values: map.merge($position-values, $width-height);

@mixin content-alignments {
    @each $key, $value in $combined-values {
        .w-#{$key} {
            width: $value !important;
        }

        .sm\:w-#{$key} {
            @include sm-screen {
                width: $value !important;
            }
        }

        .md\:w-#{$key} {
            @include md-screen {
                width: $value !important;
            }
        }

        .lg\:w-#{$key} {
            @include lg-screen {
                width: $value !important;
            }
        }

        .xl\:w-#{$key} {
            @include xl-screen {
                width: $value !important;
            }
        }

        .min-w-#{$key} {
            min-width: $value !important;
        }

        .max-w-#{$key} {
            max-width: $value !important;
        }

        .h-#{$key} {
            height: $value !important;
        }

        .min-h-#{$key} {
            min-height: $value !important;
        }

        .max-h-#{$key} {
            max-height: $value !important;
        }
    }
}

@include content-alignments();